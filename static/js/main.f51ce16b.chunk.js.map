{"version":3,"sources":["App.js","index.js"],"names":["App","useState","ingredentList","setIngredentList","loading","setloading","inputRef","useRef","useEffect","Search","query","console","log","url","fetch","then","response","json","data","hits","catch","error","className","type","ref","placeholder","onClick","current","value","map","item","recipe","label","src","image","ingredientLines","steps","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJAGe,SAASA,IACtB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA4BF,mBAAS,IAArC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,MAExBC,qBAAU,WACRC,EAAO,aACN,IAEH,IAAMA,EAAS,SAACC,GACdC,QAAQC,IAAR,gBAAqBF,IACrB,IAAIG,EAAG,0CAAsCH,EAAtC,6DACPI,MAAMD,GACHE,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLP,QAAQC,IAAIM,GACZf,EAAiBe,EAAKC,MACtBd,GAAW,MAEZe,OAAM,SAACC,GAAD,OAAWV,QAAQC,IAAI,QAASS,OAS3C,OACE,sBAAKC,UAAU,MAAf,UACE,oDAEA,uBAAOC,KAAK,OAAOC,IAAKlB,EAAUmB,YAAY,sBAC9C,wBAAQC,QAXS,WACnB,IAAIhB,EAAQJ,EAASqB,QAAQC,MAC7BnB,EAAOC,GACPJ,EAASqB,QAAQC,MAAQ,IAQvB,oBACCxB,GAAW,+CACZ,qBAAKkB,UAAU,UAAf,SACGpB,EAAc2B,KAAI,SAACC,GAClB,OACE,sBAAKR,UAAU,aAAf,UACE,+BACE,4BAAIQ,EAAKC,OAAOC,UAElB,+BACE,qBAAKC,IAAKH,EAAKC,OAAOG,UAExB,qBAAKZ,UAAU,QAAf,SACE,6BACGQ,EAAKC,OAAOI,gBAAgBN,KAAI,SAACO,GAChC,OAAO,6BAAKA,sBCjDhC,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACzC,EAAD,MAEFqC,I","file":"static/js/main.f51ce16b.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\nexport default function App() {\n  const [ingredentList, setIngredentList] = useState([]);\n  const [search, setsearch] = useState(\"\");\n  const [loading, setloading] = useState(true);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    Search(\"chicken\");\n  }, []);\n\n  const Search = (query) => {\n    console.log(`query ${query}`);\n    let url = `https://api.edamam.com/search?q=${query}&app_id=2e1a4f11&app_key=21c8696a056b4cc871562f9314641dca`;\n    fetch(url)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        setIngredentList(data.hits);\n        setloading(false);\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  const clickHandler = () => {\n    let query = inputRef.current.value;\n    Search(query);\n    inputRef.current.value = \"\";\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Food Recipe Finder</h1>\n\n      <input type=\"text\" ref={inputRef} placeholder=\"Search for Recipe\" />\n      <button onClick={clickHandler}>Search</button>\n      {loading && <h1>Loading .....</h1>}\n      <div className=\"wrapper\">\n        {ingredentList.map((item) => {\n          return (\n            <div className=\"Ingredents\">\n              <span>\n                <p>{item.recipe.label}</p>\n              </span>\n              <span>\n                <img src={item.recipe.image} />\n              </span>\n              <div className=\"steps\">\n                <ol>\n                  {item.recipe.ingredientLines.map((steps) => {\n                    return <li>{steps}</li>;\n                  })}\n                </ol>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}